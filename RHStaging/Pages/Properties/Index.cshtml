@page
@model RHStaging.Pages.Properties.IndexModel

@{
    ViewData["Title"] = "Properties";
}

<h1>Properties</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

@* method 'get' in the form tag caused the query string to be generated, thus URL can be bookmarked *@
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Properties[0].PropertyID)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.AddressSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Properties[0].Address)
                </a>                
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Properties[0].Owner.OwnerID)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.OwnerSort" asp-route-currentFilter="@Model.CurrentFilter">
                @Html.DisplayNameFor(model => model.Properties[0].Owner.FullName)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Properties[0].PropertyType)
            </th> 
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.AddressSort" asp-route-currentFilter="@Model.CurrentFilter">
                @Html.DisplayNameFor(model => model.Properties[0].City)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Properties[0].ZipCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Properties[0].NumOfBedRooms)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Properties[0].NumOfBathRooms)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Properties[0].Sqft)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Properties)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PropertyID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Owner.OwnerID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Owner.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PropertyType)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ZipCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumOfBedRooms)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumOfBathRooms)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sqft)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.PropertyID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.PropertyID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.PropertyID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.Properties.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Properties.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Properties.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Properties.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>
