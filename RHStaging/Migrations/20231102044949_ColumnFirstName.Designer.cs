// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RHStaging.Data;

#nullable disable

namespace RHStaging.Migrations
{
    [DbContext(typeof(PropMgmtContext))]
    [Migration("20231102044949_ColumnFirstName")]
    partial class ColumnFirstName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RHStaging.Models.Lease", b =>
                {
                    b.Property<int>("LeaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaseID"));

                    b.Property<int?>("Commission_Rate")
                        .HasColumnType("int");

                    b.Property<DateTime>("Lease_end_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Lease_start_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Lease_term")
                        .HasColumnType("int");

                    b.Property<decimal>("Monthly_rent")
                        .HasColumnType("money");

                    b.Property<int>("OwnerID")
                        .HasColumnType("int");

                    b.Property<int>("PropertyID")
                        .HasColumnType("int");

                    b.Property<int>("RenterID")
                        .HasColumnType("int");

                    b.Property<decimal>("Security_deposit")
                        .HasColumnType("money");

                    b.HasKey("LeaseID");

                    b.HasIndex("OwnerID");

                    b.HasIndex("PropertyID");

                    b.HasIndex("RenterID");

                    b.ToTable("Lease", (string)null);
                });

            modelBuilder.Entity("RHStaging.Models.Owner", b =>
                {
                    b.Property<int>("OwnerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OwnerID"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("MemberSince")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("OwnerID");

                    b.ToTable("Owner", (string)null);
                });

            modelBuilder.Entity("RHStaging.Models.Property", b =>
                {
                    b.Property<int>("PropertyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumOfBathRooms")
                        .HasColumnType("int");

                    b.Property<int>("NumOfBedRooms")
                        .HasColumnType("int");

                    b.Property<int?>("PropertyType")
                        .HasColumnType("int");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PropertyID");

                    b.ToTable("Property", (string)null);
                });

            modelBuilder.Entity("RHStaging.Models.Renter", b =>
                {
                    b.Property<int>("RenterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RenterID"));

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MemberSince")
                        .HasColumnType("datetime2");

                    b.HasKey("RenterID");

                    b.ToTable("Renter", (string)null);
                });

            modelBuilder.Entity("RHStaging.Models.Lease", b =>
                {
                    b.HasOne("RHStaging.Models.Owner", "Owner")
                        .WithMany("Leases")
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RHStaging.Models.Property", "Property")
                        .WithMany("Leases")
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RHStaging.Models.Renter", "Renter")
                        .WithMany("Leases")
                        .HasForeignKey("RenterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Property");

                    b.Navigation("Renter");
                });

            modelBuilder.Entity("RHStaging.Models.Owner", b =>
                {
                    b.Navigation("Leases");
                });

            modelBuilder.Entity("RHStaging.Models.Property", b =>
                {
                    b.Navigation("Leases");
                });

            modelBuilder.Entity("RHStaging.Models.Renter", b =>
                {
                    b.Navigation("Leases");
                });
#pragma warning restore 612, 618
        }
    }
}
